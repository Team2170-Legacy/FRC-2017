// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/AutonomousMotionProfile.h"
#include "Commands/AutonomousTestGroup.h"
#include "Commands/BackDoorClose.h"
#include "Commands/BackDoorOpen.h"
#include "Commands/ClimberUp.h"
#include "Commands/DumperOff.h"
#include "Commands/DumperOn.h"
#include "Commands/DumperOnWhileHeld.h"
#include "Commands/ElevatorHome.h"
#include "Commands/ElevatorInitialize.h"
#include "Commands/ElevatorOffHome.h"
#include "Commands/ElevatorPosition.h"
#include "Commands/IntakeOff.h"
#include "Commands/IntakeOn.h"
#include "Commands/IntakeToggle.h"
#include "Commands/TankDriveTeleop.h"
#include "Commands/TeleopDrive.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    supportJoystick.reset(new Joystick(1));
    
    driverJoystick.reset(new Joystick(0));
    
    driverJoystickButtonA.reset(new JoystickButton(driverJoystick.get(), 1));
    driverJoystickButtonA->WhenPressed(new IntakeToggle());

    // SmartDashboard Buttons
    SmartDashboard::PutData("Dumper On While Held", new DumperOnWhileHeld());
    SmartDashboard::PutData("Elevator Initialize", new ElevatorInitialize());
    SmartDashboard::PutData("Elevator Home", new ElevatorHome());
    SmartDashboard::PutData("Autonomous Test Group", new AutonomousTestGroup());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getDriverJoystick() {
   return driverJoystick;
}

std::shared_ptr<Joystick> OI::getSupportJoystick() {
   return supportJoystick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
