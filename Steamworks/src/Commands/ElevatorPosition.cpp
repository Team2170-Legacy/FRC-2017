// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ElevatorPosition.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ElevatorPosition::ElevatorPosition(double Position): Command() {
	mPosition = Position;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void ElevatorPosition::Initialize() {
	if (Robot::payload->GetElevatorPosition() > mPosition) {
		bMoveDown = true;
	} else {
		bMoveDown = false;
	}
}

// Called repeatedly when this Command is scheduled to run
void ElevatorPosition::Execute() {
	if (bMoveDown) {
		Robot::payload->SlewElevator(Payload::ElevatorDir::kSlewDown);
	} else {
		Robot::payload->SlewElevator(Payload::ElevatorDir::kSlewUp);
	}
}

// Make this return true when this Command no longer needs to run execute()
bool ElevatorPosition::IsFinished() {
	bool Done = false;
	if (bMoveDown) {
		Done = Robot::payload->GetElevatorPosition() <= mPosition;
	} else {
		Done = Robot::payload->GetElevatorPosition() >= mPosition;
	}
	return Done;
}

// Called once after isFinished returns true
void ElevatorPosition::End() {
	Robot::payload->SlewElevator(Payload::ElevatorDir::kSlewStop);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ElevatorPosition::Interrupted() {
	End();
}
