// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ElevatorTeleop.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ElevatorTeleop::ElevatorTeleop(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::payload.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void ElevatorTeleop::Initialize() {
	mSupportControl = new Xbox360(Robot::oi->getSupportJoystick());
	Robot::payload->SetElevatorMode(Payload::LoopMode::kOpenLoop);
}

// Called repeatedly when this Command is scheduled to run
void ElevatorTeleop::Execute() {
	double Input = mSupportControl->GetLeftY();
	const double dbLimit = 0.1;

	if (Input > dbLimit) {
		Robot::payload->SlewElevator(Payload::ElevatorDir::kSlewUp);
	}
	else if (Input < -dbLimit) {
		Robot::payload->SlewElevator(Payload::ElevatorDir::kSlewDown);
	}
	else {
		Robot::payload->SlewElevator(Payload::ElevatorDir::kSlewStop);
	}

}

// Make this return true when this Command no longer needs to run execute()
bool ElevatorTeleop::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void ElevatorTeleop::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ElevatorTeleop::Interrupted() {

}
